{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","SearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAcgBA,EAZL,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACtB,OACE,sBAAKC,UAAU,sDAAf,UAEE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACE,6BAAKL,IACL,4BAAIC,WCYGK,EAlBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEb,OACA,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACf,OACA,cAAC,EAAD,CACER,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOM,EAAOG,GAAGT,cCCdU,EAZC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAChB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAHI,EAPF,SAACC,GACZ,OACE,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACGJ,EAAMK,YCeGC,E,kDAjBd,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHI,E,8DAOFC,EAAMC,GACtBC,KAAKC,SAAS,CAAEJ,UAAS,M,+BAGzB,OAAGG,KAAKJ,MAAMC,SACL,6DAEFG,KAAKX,MAAMK,a,GAfQQ,aC6CbC,G,wDAxCb,aAAc,IAAD,8BACX,gBAYFC,eAAe,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAZxC,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAY,IAJH,E,gEAOO,IAAD,OACjBG,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GACvF,EAAKZ,SAAS,CAACtB,OAAOkC,S,+BAQjB,IAAD,EACqBb,KAAKJ,MAAzBjB,EADD,EACCA,OAAO2B,EADR,EACQA,YACRQ,EAAenC,EAAOoC,QAAO,SAAApC,GACjC,OAAOA,EAAOP,KAAK4C,cAAcC,SAASX,EAAYU,kBAE1D,OACE,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBAEE,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQmC,e,GA9BZZ,cCMHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEI,cAAC,EAAD,MAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.997e5789.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=({name,email,id})=>{\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\r\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n export default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\n\r\n    return (\r\n    <div>\r\n      {\r\n        robots.map((user,i) => {\r\n          return (\r\n          <Card\r\n            id={user.id}\r\n            name={user.name }\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n        })\r\n      }\r\n    </div>\r\n    );\r\n}\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox=({SearchChange})=>{\r\n  return(\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa2 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search Robots\"\r\n        onChange={SearchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n  return(\r\n    <div style={{overflowY:'scroll',border:'3px solid black',height:'800px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\nexport default Scroll;\r\n","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\ncomponentDidCatch(error,info){\r\n  this.setState({ hasError:true})\r\n}\r\nrender(){\r\n  if(this.state.hasError){\r\n    return <h1> Oops Something Went wrong </h1>\r\n  }\r\n  return this.props.children;\r\n}\r\n}\r\n export default ErrorBoundary;\r\n","import React ,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield:''\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json()).then(users=>{\r\n      this.setState({robots:users})\r\n    });\r\n\r\n  }\r\n  onSearchChange=(event)=>{\r\n    this.setState({searchfield:event.target.value});\r\n\r\n  }\r\n  render(){\r\n    const {robots,searchfield}=this.state;\r\n    const filteredRobots=robots.filter(robots=>{\r\n      return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n      })\r\n  return (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">RoboFriends</h1>\r\n\r\n        <SearchBox SearchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots}/>\r\n          </ErrorBoundary>\r\n\r\n      </Scroll>\r\n\r\n\r\n  </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n      <App/>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}